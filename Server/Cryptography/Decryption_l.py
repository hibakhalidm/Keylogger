from cryptography.fernet import Fernet

# Encrypted data
encrypted_data = """
gAAAAABnkRvyDThJzFMIzqNIVLcwKN-rqd7o3g6pRj_P7tlKwoaofQ2IXxbju3Xf5s3fx27bmqXw-3nz2DC8Chzjkace3RVpXmEMlM-7R9ghpkFwmnUEDX7a0TASfgqWtf43HKyRrdp7aqEKNLv4QA6aQOzMVOkImE9hj3HsQRMrL9RWyI2XpOdNu9HQdI7D9WAPoa0xhfBqDpXG5Wkt65bCUrqv3serp4pQDHUrZHrZHsa2io76CucEuYl1hFwe2rtNeke8o6jdjxnpmcHQ29aiTsLMlvjxDs3qo_DcX4QnTdIlVCBMwM2jkQB7HgZK6tTjZy6SwXXNuMbzQygNJOTHgbz3U4-oolAofwBv9FvSLe7fTAjk_Z5TSlTs4U7PAOrE7G9BvbL9Zy3d-LiO2BtKQ-FkO8rfhZiDmfYDZe7kEA0crI1eBa2CdgVls8E6NZrAFdQyisBD5B2EtvLJsU7V7NqZ1IZZXknbA4D7talgxOzJ6hTr1y3kNtBGw0GRzdW4ZJhro9CDBuaN6eWxrSubsHFDtVZa75SwhT2ZPAnkmemXnv-jqgwTvhvLgrVj51J222XsNIatnjUw6uLo8yb53tCFV3eQDg_E2gMDOw0kbGyQX5KJ_eQ=gAAAAABnkRwud3QX27aBTtCHNupj_vhojAe38xG6AIx1nK2rTebgVYjzUscdQ6fsJzT9QLiUKfBkhPLRBbLjW_bm7UU9aFSlnlM7nI8Y2ZZjgNPTnItkhApuXibZjx-ODYNdeNqtyBtjaKqS3MsJD0pVPzV2KbaIWhOpK_P27vkqSKfjpkBF_WjlyKurmuI2YoZQsHOaDL6w9zApRFxNviJ6VculpxCY25gp3Op23LOm0eQiLE6l6M_OhLSID-9oscZP8OzihNmVfTGM41a-lqn0hZQWGf7dCdTQi2sZ6vkDVhqb4H0LKfh4b-WM_1g3il4LZcErOtHiwqAAqVa6oEhK5uUDx1RjH1hjvqpFIm5ZcEnBrR80jFJ4apXuDHux50vqNk3ro1zJLI0gSgmhoTItY75DeEN_Vw4-k7CvPC9KKdnlbZTP4nRAkbGPpnFzKW47hxdH3lIZdnNLb-VIhZKEwFTRHnLvIZqQ2y79jnr4QLEyNXIGMOdQy2s8ge462MxDX699i2fXb6ZGDRRtIRBwj3ZywXd8dK92Ab6-C15CV0tn-5xZNpLmYsOlc_5MHhjAUpbZ5ouW8EhgLG03CLZmAa5kVOq4_9Ua_jXnUDG-vpQDltgJffs=gAAAAABnkRxruvSftcUWdhuMCUXN5o2zaEwne7hYCy5jxnc-RR2Nm4X2PvGrs-B7-_ZOEVqJ38LBqLpKQ8Y3XKTqYYv-QzaZRo_E1A-LvJ6qq9Oo6asDfxkZIa9KuJpWiF2sNFymMmcpjA5JtrYGEwyEVPWnUhTDZYHu7SSMrqy7FeSpeNAnHZ8S6rekxoJLbyKaag1baOCmFXgaG1ix-QtouYt10y6j2LlY9fs38uffd-ps9uNLmNVnB61Rgz5byZ6UAt1c4BydVS65aUzXPLO6x8yGecTyaQKPXTkj0cnqQ8UjYdXyXevMqeGdv_qYO-JLuFpc0x0iNa5eepgUzpzydHd3P5K2CqDeApkE79eUTeASJyVc6Of8_qX_nQ89A3VoCKf7PIk1xd2cwHZU2sXSyG2JZ7HvVmjoDkcxpqk50WrsppGrMRxEF495ZN1_qQmK0_OtCMDiwcD1wfwwUPGAXkXMNRkye7oQTkBB02h50MYzToCt3vJSsfKm_28kcj5QBDtDEdT45uMEUCmCKrfP9k8Xx8hWeH9p5EnMj-Ib1wtGCYOlCGiB2Ih0q2JPopusom6011UlEyXKvBdW4-16UOmVE-6FjcF2ZoLptl83BlK5j-lHp5WBvZsQFrXzwYm_p6Ce5XhYRESIqTJkP_vA17rYbWZS-D21qv2J1vxe1zh-93PaKcGh1RpODUBCYInCQpXxWft-iqkfRjWGIFWduN26wU6doQ==gAAAAABnkRynCi4d96tDDERlJaj1Lh-t6_BLd1thN9523_BgLDNWpwJoCq2tkEq8W37deDB77mdRVyv9Wnv3gyRymDOl0LS0d_HlEyvKlRt18UgCYidF755oqTcbZIlT33hZX9mire2Qei2q2e_hWbqWcdIb0xz_XsCSpYExo2PECyDwNAt62wAdyUuyMsY0py1lWrViDsDKqTRNtYKJhI3fEcy5X1HxQi1uRhqys86sFmFBQUYBVozNl-iOuYBPDyYs3O8_78G9Y_U2J1RBIf7c6SkhgX55qYpOobs14q5QPkCmKsgk6YbZblUkqdMI9e-A31WEtBzHSVayNpJBZObJEKzvxWTqFyAB-sMjl3Ypz5QEOvzxdRwLYARzN5leOU_MYd0Du_s3t-2xLPKTAJI2JnH6-ezi890M_nT7Rh0fRQR3us0f4uA0M9wJzMgMPHJciPOOQhq6nYlTgz1UhhDLE5NmAaLJfTDlqcHbdqr9A5b6NZb-yiqQGBKhgMeyP6Yqr_MeLD30FYKVtScx768zLMDPBHLjdoJ3MiEv14x0dq-YzO7q-9EKVjjttTbizkStpZHL3TGOcH72ZY9JWrqunNurtiVSQLRezmhDHWalWRilfb1B-Jc-kK1q0WSHiIs_C04KHlYGov6JI049zCkTRBhTP8tZ7Cdwj4RD3DOG1GvseGolfU8fhbUvpi-Kl-nDoN-YetUhA0GsswnwygCn9WOAKqy66g==gAAAAABnkRzkdPU-wBFh0o9YLTVNijyaN0QonqQ8MuLbD-0JAhrRsdgvnhZp4wgAhusyzG3LYqzmn6Cr78TZl6O9_fmnUReBQqtAGd7nLfawImfaX95N28XCd-h4i7h_uj_n4x24XqHtSbbBYQD4nRCwmtlgqxCIq2xogRk0tUoebwVxn_L2T7Dg978-zA4bWz_jVkP7KVyMyTsN3nWU4TzULtkG6kHlko5kCgtrWBjk9sBAPOWIkTTBK6IdujWI62l2b7QHPCgwyeFqVNLrjXuRUz32-_884RN1JWGYixA-tIrhGZJZ7o2NzlL6j5g9Rt8IOc2fXNoLtjz-T3T36WcDYQTzpJqdrB282LDkbpAxPthnch0WgQ6XU7efSNfzF9PEeLWv-CDN50SGD99zXckLCmsvZqDh82yfqzZho5fXM9LvwYpDN5p-NopfHaAWwefxK3NbscS3WTLV0Jv90cmUzPRJsOh7ZebopBwpg5ZgjOxF3W9Md7GIiliDfxlzJb4lLWk92ECsND_Cy9AqnQwEWUmnMv0OruVMjAQRORToVi5QWrI0I7daqgiwjWBz46rrX_CvZgQnsPfKC5LMp1YKMmXvGanDBaxCq6HLd0TneSl_ysjxUCc1AhJkIktrz3i6d54IhMQ9IahxadW71G47rnGx38Y2Pk-PBML_5oHzlKSmAu3z4uLEY7gOQdfibE1H53stToXTctSvvp1cE9T65LhYiLBEuA==gAAAAABnkR0gc9oZul3Qr7oR0khM1j5-6_m-c4pgWkzyRRmIfxeBPY_vPVqXaJuLyIRcyqu6XrdJd67cRx2nCOftqEfyYoifRGdWGfgJ51M-SJ8A0VQPMKOsnirgLHXLgMhuai9ctLSpYhA7Vee1OmFyWm8XPGYW_tR69BCmypaTpco2XaQgN5Ct1j3XlT8hL7h-F6PKyqKIJTz2KgWw0NAmHF6HRQ9wTcvV3z7mE_WAzllwX9OtCdq0ykdHq9oUJA2u0yj2ZKXPWhxfv1iXWmx__KwpOrSu2tpp69ajTesyZdCIrlfJaAhMjS2zhce9h1hfUuvab-Pnm0ThYF7dGTmLgS1urVwzDohMA_oen-15V76smIAqa9AmpHQNFf-z3WlQ4Y1LATiDXyqrxcSQNeihIlMaDgwM4Qere5jEcboeyBtD1RObdbJT-XN-O9VAO4GN_78GJqZdt_QjmQ293fg4-cJ9anKmAv5rbO005_BI9ciPi6zYaqoAjoeKnZFns943Jj7upHNJNCu8sdlcLS8IE6si4y4kInmbf4Dffzy4leER-wKfptp4k0tGk1ccn1YUPcwOmMH04ROfftwKeS-yNCRt2nv4-v0vRbZzlNd0JgEC9C6jMQepb1jOIy67b-TmVz-J6RbZNpJGIppwJQVj7L0KCOOtOpf5RMtFdWl8F8uxG4Yq8n5UGJZo3OAANuc_BdLgXLOHPabnLdg_zEhKeyUGgwWQDQ==gAAAAABnkR1gI0kYLwlHCfr2u0TWTrtZ8I5if58whZzlOuKyH5UxST0tV33CkwIhpO8nzdE9VZ78wXz8ZF_ZHFus637soqe8y-sABhGi64JuzoZcnjJoYqUCS_9EWtuwtRGbhreRj5aVHnSuynxuueCsNxm5-SSAQnCtwduEFUPqYizWPhr7k0CQH1ZYhj522paeg91jdKZuRj17fXz7ogWAfzRZuG2jWIT6mkssIRIf1o6H2m5Vd5x10MFCBs8J-h_rVs7P4TOm2BrFyVgVrQOqOZ1voo_b7cskyjtjUuOdb8gZT4D3WLqWg9cv3wEXbqD3UIFiKwXVVdfPpy-x3oNLKd66XNv0r6qYgtd3mNQiCvjgsX_wZMhq8otwTcAHDTznqv2UoocPhjNrG9JEaBOoMk-FIc-2xnQUaiiY6jYcu_HRXShoXXQ_aFPgKNTfltj70kAj56gZoikPw8YQQFMQv1RHgLHfTuGLX7VmNYnK4_iA4JN5KwlW9_zCF8R709IoW73zwY1P8g4X_hq-CxL4g1lc7JKLjhreIzi_sRmpbE_gI5c1c-VEryMbP4whZualc0VHQTMjrC4mGf6V-IVEQ2nHVnazmB7ftVHOzlFLNV4fhGhqKmyunCsLMNHJmMxhR_nZyau-4JQHGdEw5_fXPbdIgEkbcwCYx6f0TWFqlYvaqI6J604q2yrb7S2Peb7AgtWPnHBkeK7bl-BXE6Ccq41Wvs_t2Q==gAAAAABnkR2cgmmexqYPm2l-jwK33UPXNqD1BDwfEKQHhIygRsuyEBNxLQ20wMI8a6bTqbzI6zipyVVkzHS6wKCwmQcqQLPHwsg4OzbCV7kWGQSF-j-3mnSzczykTfL3Dk8tsj8f22_wgZcB5gEjQBAZ_h08n5T3pjbQjorkBIuFRS7QuevCRwdbnpyP95eWezf1AryR3TF_NooEAHCcC6-OiIaazIJnP09bgm8AAUSPtlhMd9OiuNRMldYALNtV0Cdn5h_7VfZ8t4-4gDmahe3mb3umWOTC3golhHHEceiw3l94mR1qJckgwyBrKDr5vXTcy5GsMXjlcfmHD1xIbEWFPAmPP-oybPuAs_4pc9eKhRtbgIR0K91o9Ve4bt-v5Nwm9RK5mzinn00zq0T0PebKC6bhlbhqCVqXCVfeAoqMlrdHV4p8QpVZva5n8ZRH-ShVmJNEJuPIBMj65AkAPMoSd2O9DwSNYdwzfHDPSysNaKQzySJfLwNV54UlCfLHBgalpGlh0o37Ed8lu32eic2UpK8jcSPQiICUn9M5ES4DsgGBbWUqUG334IxkFeLuaowtz4RzCoLyS_oMkuldcXuOX1_5Gssw7qGGQv8SqtQEy18fKRte6gB9ANuXRyI76RDNUOa-5hBshNIBsD8oNqWP-MMgifvT5XVlfxIU0mD27GDsETHCKw-8fZIz8NiUXjQLwL50bsrKB_Ytmatl_hRGqMSBeft6tw==
"""
# Encryption key
key = "e9pEXagLCMvIiyeOqsSf456koc4nmlHNIk9P7b5_7RE="

# Convert the encrypted data into the proper format
encrypted_data = encrypted_data.encode()

# Create a Fernet object with the given key
fernet = Fernet(key)

# Decrypt the data
try:
    decrypted_data = fernet.decrypt(encrypted_data)
    print("Decrypted Data: ", decrypted_data.decode())
except Exception as e:
    print("Error decrypting data: ", e)
